openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Medten Product API'
  description: 'Interact with the Medten product database using this API.'
servers:
  - url: https://hm5fehgga2.execute-api.ap-southeast-1.amazonaws.com/Prod/api/v1/
    description: API Test Environment
  - url: https://w5d9g2jvp2.execute-api.us-west-1.amazonaws.com/Prod/api/v1/
    description: API Production Environment
  - url: http://localhost:3000/api/v1/
    description: Developer Local Test Environments
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/gaumeister/medten-product-api/1.0.0
paths: 
  /auth/login:
    post:
      summary: Logs in, obtaining api key and principal information.
      tags: 
        - authentication
      requestBody:
        description: The username and password login credentials are required.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/LoginResult'
        400:
          $ref: '#/components/responses/400ClientError'
        401:
          description: Unauthorized. Invalid credentials.
        500:
          $ref: '#/components/responses/500ServerError'
  
  /auth/password/forgot:
    post:
      summary: Handle a request to reset the users' password.
      tags: 
        - authentication
      requestBody:
        description: The email of the user requesting a password reset.
        required: true
        content:
          application/json:
            schema:
              type: object
              allOf:
                - type: object
                  properties:
                    email:
                      type: string
                      maxLength: 255
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SimpleMessage'
        500:
          $ref: '#/components/responses/500ServerError'
  /auth/password/reset:
    post:
      summary: Resets the password for a user.
      tags: 
        - authentication
      requestBody:
        description: The replacement password and password-reset-token.
        required: true
        content:
          application/json:
            schema:
              type: object
              allOf:
                - type: object
                  properties:
                    token:
                      description: the temporary token received at the reset password URL for the user
                      type: string
                      maxLength: 255
                    password:
                      description: the new password for the user
                      type: string
                      maxLength: 255
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SimpleMessage'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /dataload/tables:
    get:
      summary: get the list of table entity names for use in the other dataload API calls.
      tags:
        - dataload
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  tables:
                    type: array
                    items: 
                      type: string
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /brands:
    summary: Brands for products.
    parameters:
    - name: id
      in: query
      description: a specific brand id
      required: false
      schema:
        type: integer
    - name: name_en
      in: query
      description: name of the brand (English)
      required: false
      schema:
        type: string
    - name: name_zh
      in: query
      description: name of the brand (Chinese)
      required: false
      schema:
        type: string
    get:
      summary: searches for brands
      tags:
        - general
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  brands:
                    type: array
                    items:
                      $ref: '#/components/schemas/Brand'

        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /brands/${id}:
    parameters:
    - name: id
      in: path
      description: the brand id
      required: true
      schema:
        type: integer
    get:
      summary: gets a brand by id
      tags:
        - general
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Brand'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    put:
      summary: updates a brand
      tags:
        - general
      requestBody:
        description: >
          The brand to be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Brand'
      responses:
        200:
          description: returns the brand 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Brand'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /categories:
    summary: Categories of medical device products.
    parameters:
    - name: id
      in: query
      description: a specific category id
      required: false
      schema:
        type: integer
    - name: name_en
      in: query
      description: name of the category (English)
      required: false
      schema:
        type: string
    - name: featured
      in: query
      description: whether the category is featured in the Catalog (1) or not (0)
      required: false
      schema:
        type: integer
    get:
      summary: searches for categories
      tags:
        - general
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  category_views:
                    type: array
                    items:
                      $ref: '#/components/schemas/CategoryView'

        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /custom_attributes:
    summary: Custom attributes that may be assigned to products.
    parameters:
    - name: id
      in: query
      description: a specific custom attribute id
      required: false
      schema:
        type: integer
    - name: name_en
      in: query
      description: name of the custom attribute (English)
      required: false
      schema:
        type: string
    - name: name_zh
      in: query
      description: name of the custom attribute (Chinese)
      required: false
      schema:
        type: string
    - name: category_id
      in: query
      description: a specific category_id
      required: false
      schema:
        type: integer
    get:
      summary: searches for custom attributes
      tags:
        - general
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  custom_attributes:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomAttribute'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /equipment_models:
    summary: Models used across all equipment.
    description: An equipment is any entity having a model number that could potentially be assigned to a product.
    parameters:
    - name: brand_id
      in: query
      description: the brand id to narrow the search
      required: false
      schema:
        type: integer
    - name: model_search
      in: query
      description: the search string to perform a wildcard search across all models 
      required: false
      schema:
        type: string
    get:
      summary: searches for equipment models
      tags:
        - general
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  equipment_models:
                    type: array
                    items:
                      type: object
                      properties:
                        model:
                          type: string
                        brand_id:
                          type: integer
                        brand_en:
                          type: string
                        brand_zh:
                          type: string

        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /filter_option_views:
    summary: Filtering options available across products to facilitate precise searches.
    parameters:
    - name: category_id
      in: query
      description: a specific category id
      required: false
      schema:
        type: integer
    - name: category_en
      in: query
      description: name of the category (English)
      required: false
      schema:
        type: string
    - name: category_zh
      in: query
      description: name of the category (Chinese)
      required: false
      schema:
        type: string
    - name: filter_id
      in: query
      description: the id of the filter
      required: false
      schema:
        type: integer
    - name: visible_in_catalog
      in: query
      description: flag indicating whether the filter is used (visible) in the Product Catalog application for filtering
      required: false
      schema:
        type: boolean 
    - name: filter_option_id
      in: query
      description: the individual filter option id
      required: false
      schema:
        type: integer
    - name: filter_en
      in: query
      description: name of the filter (English)
      required: false
      schema:
        type: string
    - name: filter_zh
      in: query
      description: name of the filter (Chinese)
      required: false
      schema:
        type: string
    - name: option_en
      in: query
      description: name of the option (English)
      required: false
      schema:
        type: string
    - name: option_zh
      in: query
      description: name of the option (Chinese)
      required: false
      schema:
        type: string
    get:
      summary: search for filter options based on criteria other than product id
      tags:
        - general
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductFilterOptionView'
  /marketing_regions:
    summary: Marketing regions.
    parameters:
    - name: id
      in: query
      description: a specific marketing region id
      required: false
      schema:
        type: integer
    - name: name_en
      in: query
      description: name of the marketing region (English)
      required: false
      schema:
        type: string
    get:
      summary: searches for marketing regions
      tags:
        - general
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                   marketing_regions:
                    type: array
                    items:
                      $ref: '#/components/schemas/MarketingRegion'

        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /suppliers:
    summary: Suppliers of equipment.
    parameters:
    - name: id
      in: query
      description: a specific supplier id
      required: false
      schema:
        type: integer
    - name: name_en
      in: query
      description: name of the supplier (Englisth)
      required: false
      schema:
        type: string
    - name: name_zh
      in: query
      description: name of the supplier (Chinese)
      required: false
      schema:
        type: string
    get:
      summary: searches for suppliers
      tags:
        - general
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  suppliers:
                    type: array
                    items:
                      $ref: '#/components/schemas/Supplier'

        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /dataload/${entity}/metadata:
    get:
      summary: get table metadata (field and data-type information).
      tags:
        - dataload
      parameters:
        - in: path
          required: true
          name: entity
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: entity name of the table
                  plural:
                    type: string
                    description: plural entity name of the table
                  table:
                    type: string
                    description: actual db table name
                  columns:
                    type: array
                    items:
                      type: object
                      properties:
                        column:
                          type: string
                          description: name of the db column
                        sql_type:
                          type: string
                          description: the data type (including length, precision) of the column
                        pk:
                          type: boolean
                          description: whether the column is/is part of the primary key
                        nullable:
                          type: boolean
                        default:
                          type: string
                          description: the default value, if any
  /dataload/${entity}/bulkupdate:
    post:
      summary: mass update data ina a table
      tags:
        - dataload
      parameters:
        - in: path
          required: true
          name: entity
          schema:
            type: string
      requestBody:
        description: The data to be loaded. The expected content is a tab-delimited list of data to load. The data should contain a first row matching table columns (see the `/dataload/${entity}/metadata` API for these details). Column(s) matching the primary key of the table **must** be provided to establish a match. All data provided will be updated. Data that does not match a row in the database will be ignored.
        required: true
        content:
          text/plain:
            schema:
              type: string
            example: id\tname_en\tname_zh\tparent_id\tis_oem\n1\tGE Healthcare\t通用\t0\t0\n2\tMindray\t迈瑞\t0\t0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  total:
                    type: integer
                  inserted:
                    type: integer
                  skipped:
                    type: integer
                  updated:
                    type: integer
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /dataload/${entity}/bulkinsert:
    post:
      summary: mass insert data into a table
      tags:
        - dataload
      parameters:
        - in: path
          required: true
          name: entity
          schema:
            type: string
      requestBody:
        description: The data to be loaded. The expected content is a tab-delimited list of data to load. The data should contain a first row matching table columns (see the `/dataload/${entity}/metadata` API for these details). All data provided will be inserted, regardless of whether matching data exists.
        required: true
        content:
          text/plain:
            schema:
              type: string
            example: id\tname_en\tname_zh\tparent_id\tis_oem\n1\tGE Healthcare\t通用\t0\t0\n2\tMindray\t迈瑞\t0\t0
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  total:
                    type: integer
                  inserted:
                    type: integer
                  skipped:
                    type: integer
                  updated:
                    type: integer
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /dataload/${entity}/download:
    get:
      summary: download the contents of a database table (up to 100,000 rows)
      tags:
        - dataload
      parameters:
        - in: path
          required: true
          name: entity
          schema:
            type: string
      
          
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    description: The total number of matching entities in the database.
                    type: integer
                  plural_entity_name:
                    description: the `plural_entity_name` property will be the pluralized name of what is being downloaded ('products', 'families', 'equipment', etc.).
                    type: array
                    items:
                      type: object
                      description: the individual objects data corresponding to rows in the table.
                  headers:
                    type: array
                    items:
                      type: object
                      description: a single object whose properties can be used to create headers for CSV/table rendering.
            text/csv: {}
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products:
    get:
      summary: Find products using a simple search
      description: >
        Retrieves lists of matching products for the given search criteria. If you need to perform more sophisticated searches, please use the `/products/search` API.
      tags:
        - products
      parameters:
        - in: query
          name: product_id
          schema:
            type: integer
        - in: query
          name: sku
          schema:
            type: string
        - in: query
          name: oem
          schema:
            type: string
        - in: query
          name: name_en
          schema:
            type: string
        - in: query
          name: name_zh
          schema:
            type: string
        - in: query
          name: oem_brand_id
          schema:
            type: integer
        - in: query
          name: oem_brand_en
          schema:
            type: string
        - in: query
          name: oem_brand_zh
          schema:
            type: string
        - in: query
          name: description_en
          schema:
            type: string
        - in: query
          name: description_zh
          schema:
            type: string
        - in: query
          name: product_type_en
          schema:
            type: string
        - in: query
          name: product_type_zh
          schema:
            type: string
        - in: query
          name: family_id
          schema:
            type: integer
        - in: query
          name: family_code
          schema:
            type: string
        - in: query
          name: family_name_en
          schema:
            type: string
        - in: query
          name: category_id
          schema:
            type: integer
        - in: query
          name: category_en
          schema:
            type: string
        - in: query
          name: category_zh
          schema:
            type: string
        - in: query
          name: featured
          description: specify 1 for true, 0 for false
          schema:
            type: integer
        - in: query
          name: popular
          description: specify 1 for true, 0 for false
          schema:
            type: integer
        - in: query
          name: boolean
          description: specify 'or' when you want all specified criteria to be unioned (defaults to 'and'). Otherwise criteria will be anded (intersected).
          schema:
            type: string 
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
      
    post:
      summary: creates a new product
      tags:
        - products
      requestBody:
        description: >
          The product to be created. Note the `id` property should be excluded. It will be returned in the response.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Product'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'  
  /products/search:
    post:
      summary: Perform an advanced search for products.
      description: Extends basic search capabilities, allowing a search term to be used across many different product fields. Additional filter criteria can be used to further narrow the search-term search.
      tags:
        - products
      requestBody:
        description: >
          The search criteria to use for the search.
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchCriteria'
              - type: object
                properties:
                  search_term:
                    type: string
                    description: wildcard search value to be used for searching any/all of the `search_term_fields`
                  search_term_fields:
                    description: which product fields the search term is applied to
                    type: array
                    items:
                      type: string
                      enum: [sku, oem, name_en, oem_reference_name]
                  search_filter:
                    type: string
                    enum: [brand, certificate, custom attribute, image type, lifecycle, marketing region, packaging factor, supplier, oem reference, product type]
                    description: >
                      the type of filtering criteria to further refine results.
                  search_filter_value:
                    oneOf:
                      - type: integer
                      - type: string
                    description: >
                      The value to be used in the search filter criteria depends on the
                      value used for the `search_filter`

                        | search_filter | value is a(n) | matching |
                        |---------------|------------|----------|
                        | oem_brands | integer | oem brand id 
                        | certificates | integer | certificate id
                        | custom_attributes | integer | attribute id 
                        | lifecycles | integer | lifecycle id
                        | marketing_regions | integer | marketing region id
                        | packaging_factors | integer | packaging factor id
                        | suppliers | integer | supplier id
                        | oem_references | string | name of oem reference 
                        | product_types | integer | product type id
                  category_id:
                    type: array
                    items:
                      type: integer
                    description: The categories to add to the product search filtering. Specifying more than one category widens the search results.
                   
            examples:
              example1:
                description: >
                  Search for products having a `sku` and `oem` for `SA-024` (wildcard),

                  
                  **and** that belong to either `category_id` `4` or `7`. 
                  
                  
                  **and** further apply a filter to get results that are associated with `brand` = `3`.
                  
                  
                  Order the results by `oem`. 
                  

                  Skip the first result, and limit the results to `10` entries.
                value:
                  offset: 1
                  limit: 10
                  order_by:
                    - oem
                  search_term: SA-024
                  search_term_fields:
                    - sku
                    - oem
                  category_id:
                    - 4
                    - 7
                  search_filter: brand
                  search_filter_value: 3
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    description: The total number of matching products in the database.
                    type: integer
                  product_views:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductView'
            text/csv: {} 
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/search/download:
    # get: 
    #   summary: Downlaod a search for products with CSV output.
    #   description: Identical to `/products/search` except the output is downloaded as a CSV file
    #   tags:
    #     - products
    #   parameters:
    #     # - in: query
    #     #   name: token
    #     #   schema:
    #     #     type: string
    #     #   description: API token - same as used during BASIC Authentication
    #     - in: query
    #       name: payload
    #       schema:
    #         type: string
    #       description: Build an object as you would for the `/products/search` endpoint, stringify it, and urlencode it. 
    #   responses:
    #     200:
    #       description: OK
    #       content:
    #         text/csv: {}
    #     400:
    #       $ref: '#/components/responses/400ClientError'
    #     500:
    #       $ref: '#/components/responses/500ServerError'
    post:
      summary: Perform an advanced search for products with download output.
      description: Extends basic search capabilities, allowing a search term to be used across many different product fields. Additional filter criteria can be used to further narrow the search-term search.
      tags:
        - products
      requestBody:
        description: >
          The search criteria to use for the search.
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchCriteria'
              - type: object
                properties:
                  search_term:
                    type: string
                    description: wildcard search value to be used for searching any/all of the `search_term_fields`
                  search_term_fields:
                    description: which product fields the search term is applied to
                    type: array
                    items:
                      type: string
                      enum: [sku, oem, name_en, category_en]
                  search_filter:
                    type: string
                    enum: [brand, certificate, custom_attribute, image_type, lifecycle, marketing_region, packaging_factor, supplier, oem_reference, product_type]
                    description: >
                      the type of filtering criteria to further refine results.
                  search_filter_value:
                    oneOf:
                      - type: integer
                      - type: string
                    description: >
                      The value to be used in the search filter criteria depends on the
                      value used for the `search_filter`

                        | search_filter | value is a(n) | matching |
                        |---------------|------------|----------|
                        | brand | integer | brand id 
                        | certificate | integer | certificate id
                        | custom_attribute | integer | attribute id 
                        | image_type | integer | image type id
                        | lifecycle | integer | lifecycle id
                        | marketing_region | integer | marketing region id
                        | packaging_factor | integer | packaging factor id
                        | supplier | integer | supplier id
                        | oem_reference | string | name of oem reference 
                        | product_type | integer | product type id
                  category_id:
                    type: array
                    items:
                      type: integer
                    description: The categories to add to the product search filtering. Specifying more than one category widens the search results.
                   
            examples:
              example1:
                description: >
                  Search for products having a `sku` and `oem` for `SA-024` (wildcard),

                  
                  **and** that belong to either `category_id` `4` or `7`. 
                  
                  
                  **and** further apply a filter to get results that are associated with `brand` = `3`.
                  
                  
                  Order the results by `oem`. 
                  

                  Skip the first result, and limit the results to `10` entries.
                value:
                  offset: 1
                  limit: 10
                  order_by:
                    - oem
                  search_term: SA-024
                  search_term_fields:
                    - sku
                    - oem
                  category_id:
                    - 4
                    - 7
                  search_filter: brand
                  search_filter_value: 3
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    description: The total number of matching products in the database.
                    type: integer
                  product_views:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductView'
                  headers:
                    type: array
                    items:
                      type: object
                      description: a single object whose properties can be used to create headers for CSV/table rendering.
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/skus:
    summary: Gets the distinct skus currently in the database.
    description: Gets the distinct skus currently in the database. SKU should be a unique value.
    get:
      summary: list of unique SKUs
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                type: array
                items:  
                  type: string
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/oems:
    summary: Gets the distinct oems currently in the database.
    description: Gets the distinct oems currently in the database. 
    get:
      summary: list of OEMs with the associated product id
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                    description: The number of entries found. 
                  product_oems:
                    type: array
                    items:  
                      type: object
                      properties:
                        id:
                          type: integer
                          description: the product id
                        oem:
                          type: string
                          description: the oem value
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}:
    summary: Represents a product
    description: A medical product.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets a product by id
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    put:
      summary: updates a product
      description: >
        Updates a product. Note, there are certain business rules that are enforced before an update is performed.
        

        * A product category may not be changed from any of the 3 major branches of categories (Accessories, Parts and Repair Service) to another. Attempting to update a category from a category within one branch to another branch will result in an HTTP 400 error.
        * When a product category is changed from to another category within the same major branch, all *product filter options* and *product custom attributes* will be removed automatically, because they are directly related to the category of the product.
      tags:
        - products
      requestBody:
        description: >
          The product to be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: returns the product, including extended information
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    delete:
      summary: deletes a product
      tags:
        - products
      responses:
        200:
          description: returns the product, including extended information
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/DeleteConfirmation'
        400:
          $ref: '#/components/responses/400ClientError'
        410:
          $ref: '#/components/responses/410ClientError'
        500:
          $ref: '#/components/responses/500ServerError'       
  /products/${id}/certificates:
    summary: The certificates a product is qualified for.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all certificates for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_certificates:
                    type: array
                    items:  
                      $ref: '#/components/schemas/Certificate'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the current set of certificates for a product
      description: Replaces the current set of certificates for a product, adding those that need to be added, updating any existing, and removing any that no longer match the payload.
      tags:
        - products
      requestBody:
        description: >
          The new set of certificates for the product.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductCertificate'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductCertificate'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/custom_attributes:
    summary: The custom attributes of a product.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all custom attributes for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_custom_attribute_views:
                    type: array
                    items:  
                      $ref: '#/components/schemas/ProductCustomAttributeView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the current set of custom attributes for a product
      description: Replaces the current set of custom attributes for a product, adding those that need to be added, updating any existing, and removing any that no longer match the payload. Custom attributes are differentiated by the distinct combination of `custom_attribute_id`, `value_en` and `value_zh`.
      tags:
        - products
      requestBody:
        description: >
          The new set of custom attributes for the product
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductCustomAttribute'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductCustomAttribute'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/detail:
    summary:  Detailed product information for the product catalog.
    description: A full product and supporting info for display in the catalog. The extended view of the product is returned along with other decorating data.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets a product by id
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ProductView'
                  - type: object
                    properties:
                      compatibility:
                        type: array
                        items:
                          type: object
                          properties:
                            group_id:
                              type: integer
                            equipment_id:
                              type: integer
                            model:
                              type: string
                            brand_id:
                              type: integer
                            brand_en:
                              type: string
                            brand_zh:
                              type: string
                      custom_attributes:
                        description: custom attributes for the product
                        type: array
                        items:
                          $ref: '#/components/schemas/CustomAttribute'
                      family:
                        description: the family the product belongs to
                        $ref: '#/components/schemas/FamilyView'
                      filter_options:
                        description: the filter options values (i.e. specifications) for the product
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductFilterOptionView'
                      images:
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductImageView'
                      oem_products:
                        description: other products related to this product based on a shared oem value
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductView'
                      oem_references:
                        description: cross-references to other products based on assigned OEM references
                        type: array
                        items:
                          $ref: '#/components/schemas/ProductOemReferenceView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
        
  /products/${id}/equipment:
    summary: The equipment for a product.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all equipment for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_equipment_connect_views:
                    type: array
                    items:  
                      $ref: '#/components/schemas/ProductEquipmentView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the current set of equipment for a product
      description: Replaces the current set of equipment for a product, adding those that need to be added, updating any existing, and removing any that no longer match the payload. Equipment items are differentiated by the `equipment_id` property.
      tags:
        - products
      requestBody:
        description: >
          The new set of equipment for the product
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductEquipment'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductEquipment'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/families:
    summary: The families for a product.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all families for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_family_connects:
                    type: array
                    items:  
                      $ref: '#/components/schemas/ProductFamily'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the current families for a product
      description: Replaces the current familiest for a product, adding those that need to be added, updating any existing, and removing any that no longer match the payload. Family references are differentiated by `family_id` property.
      tags:
        - products
      requestBody:
        description: >
          The new families for the product
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductFamily'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductFamily'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/filter_options:
    summary: The filter options for a product.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all filter options for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_filter_option_views:
                    type: array
                    items:  
                      $ref: '#/components/schemas/ProductFilterOptionView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the current filter options for a product
      description: Replaces the current filter options for a product, adding those that need to be added, updating any existing, and removing any that no longer match the payload. Filter options are differentiated by the `filter_option_id` property.
      tags:
        - products
      requestBody:
        description: >
          The new filter option for the product
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductFilterOption'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductFilterOption'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/images:
    summary: The images for a product.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all images for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_image_views:
                    type: array
                    items:  
                      $ref: '#/components/schemas/ProductImageView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the current images for a product
      description: Replaces the current images for a product, adding those that need to be added, updating any existing, and removing any that no longer match the payload. Images are differentiated by a unique combination of the `image_link` and `image_type_id` properties.
      tags:
        - products
      requestBody:
        description: >
          The new images for the product
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductImage'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductImage'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/marketing_regions:
    summary: The marketing regions for a product.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all marketing regions for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_marketing_region_views:
                    type: array
                    items:  
                      $ref: '#/components/schemas/ProductMarketingRegionView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the marketing regions for a product
      description: Replaces the current marketing regions for a product, adding those that need to be added, updating any existing, and removing any that no longer match the payload. Marketing regions are differentiated by the `marketing_region_id` property.
      tags:
        - products
      requestBody:
        description: >
          The new marketing regions for the product
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductMarketingRegion'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductMarketingRegion'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/oem_references:
    summary: The oem references for a product.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all oem references for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_oem_reference_views:
                    type: array
                    items:  
                      $ref: '#/components/schemas/ProductOemReferenceView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the current oem references for a product
      description: Replaces the current oem references for a product, adding those that need to be added, updating any existing, and removing any that no longer match the payload. OEM references are differentiated by a unique combination of the `brand_id` and `name` properties.
      tags:
        - products
      requestBody:
        description: >
          The new oem references for the product
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductOemReference'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductOemReference'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/sets:
    summary: The sets for a product. Product sets are products that are composed of child products.
    parameters:
    - name: id
      in: path
      description: the (parent) product id, defining the product set
      required: true
      schema:
        type: integer
    get:
      summary: gets all the child products for the product set
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_set_views:
                    type: array
                    items:  
                      $ref: '#/components/schemas/ProductSetView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the components for a product set
      description: Replaces the current child products for a product set, adding those that need to be added, updating any existing, and removing any that no longer match the payload. Child product references are differentiated by unique combinations of the  `child_product_id` and `quantity` properties.
      tags:
        - products
      requestBody:
        description: >
          The new child products for the product set
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductSet'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductSet'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/suppliers:
    summary: The suppliers for a product. 
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all suppliers for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_suppliers:
                    type: array
                    items:  
                      $ref: '#/components/schemas/ProductSupplier'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the suppliers for a product.
      description: >
        Replaces the current suppliers for a product, adding those that need to be added, updating any existing, 
        and removing any that no longer match the payload. 
        Supplier references are differentiated by the `supplier_id` property.
      tags:
        - products
      requestBody:
        description: >
          The suppliers for the product
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductSupplier'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductSupplier'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/quicksearch:
    summary: Perform a catalog search for products.
    parameters:
    - in: query
      name: search_term
      schema:
        type: string
      description: Using the `search_term` parameter searches the category, oem, sku, brand and oem references of a product.
    - in: query
      name: brand_ids
      schema:
        type: array
        items:
          type: integer
      description: Using brand ids searches for products that match OEM brands associated with product
    - in: query
      name: category_ids
      schema:
        type: array
        items:
          type: integer
      description: Using category ids searches for products that belong to any of the provided categories.
    - in: query
      name: model
      schema:
        type: string
      description: Using the `model` parameter searches for products compatible with the given equipment model.
    - in: query
      name: with
      schema:
        type: string
      description: If `with` parameter includes the word 'images', product images will also be retrieved..
    get:
      summary: Performs a catalog search for all products in the database.
      description: >
        The quicksearch endpoint is used to perform searches for products. A search term can be provided to find products matching a sku,
        oem, category name, or brand. It is also possible to search by one or more brands, one or categories, or by a compatible equipment model.
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        category_id:
                          type: integer
                        name_en:
                          type: string
                        description_en:
                          type: string
                        oem:
                          type: string
                        oem_brand_en:
                          type: string
                        oem_brand_id:
                          type: integer
                        packaging_factor:
                          type: string
                        product_type_id:
                          type: integer
                        price_us:
                          type: number
                        sku:
                          type: string
                        models:
                          type: string
                          description: pipe-separated list of models
                        filter_option_ids:
                          type: string
                          description: pipe-separated list of filter option ids
                  product_images:
                    type: array
                    items:
                      type: object
                      $ref: '#/components/schemas/ProductImage'

                    
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /equipment:
    get:
      summary: searches for equipment
      tags:
        - equipment
      parameters:
        - in: query
          name: search_term
          schema:
            type: string
          description: Using the `search_term` parameter searches the `model`, `type_en`, `type_zh`, `brand_en`, and `brand_zh` properties using a wildcard search. **Using this parameter overrides any other query parameters (i.e. other query parameters will be ignored).**
        - in: query
          name: brand_id
          schema:
            type: integer
        - in: query
          name: brand_en
          schema:
            type: string
        - in: query
          name: brand_zh
          schema:
            type: string
        - in: query
          name: created
          schema:
            type: string
          description: (ISO-8601 date format)
        - in: query
          name: id
          description: the equipment id
          schema:
            type: integer
        - in: query
          name: model
          schema:
            type: string
        - in: query
          name: type_en
          schema:
            type: string
          description: the name of the equipment type (English)
        - in: query
          name: type_zh
          schema:
            type: string
          description: the name of the equipment type (Chinese)
        - in: query
          name: updated
          schema:
            type: string
          description: (ISO-8601 date format)
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  equipment:
                    type: array
                    items:
                      $ref: '#/components/schemas/EquipmentView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
          
    post:
      summary: creates a new equipment item
      tags:
        - equipment
      requestBody:
        description: >
          The equipment to be created. Note the `id` property should be excluded. It will be returned in the response.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equipment'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Equipment'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'  
  /equipment/${id}:
    summary: Represents equipment.
    description: An equipment is any entity having a model number that could potentially be assigned to a product.
    parameters:
    - name: id
      in: path
      description: the equipment id
      required: true
      schema:
        type: integer
    get:
      summary: gets equipment by id
      tags:
        - equipment
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Equipment'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    put:
      summary: updates an equipment item
      tags:
        - equipment
      requestBody:
        description: >
          The equipment item to be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equipment'
      responses:
        200:
          description: returns the equipment, including extended information
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Equipment'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /equipment/${id}/available_regions:
    parameters:
    - name: id
      in: path
      description: the equipment id
      required: true
      schema:
        type: integer
    get:
      summary: gets available regions for a given equipment item
      tags:
        - equipment
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/EquipmentAvailableRegionView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the available regions for an equipment item
      description: Replaces the available regions for an equipment item, adding those that need to be added, updating any existing, and removing any that no longer match the payload. Available regions are differentiated by the `available_region_id` property.
      tags:
        - equipment
      requestBody:
        description: >
          The new available regions for the equipment item.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/EquipmentAvailableRegion'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductFilterOption'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /equipment/${id}/images:
    parameters:
    - name: id
      in: path
      description: the equipment id
      required: true
      schema:
        type: integer
    get:
      summary: gets images for a given equipment item
      tags:
        - equipment
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/EquipmentImage'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: replaces the images for an equipment item
      description: Replaces the imagesfor an equipment item, adding those that need to be added, updating any existing, and removing any that no longer match the payload. Images are differentiated by the `image_link` property.
      tags:
        - equipment
      requestBody:
        description: >
          The current images for the equipment item.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/EquipmentImage'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductFilterOption'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /equipment/models:
    get:
      summary: lists all distinct equipment model and brand combinations in the DB
      tags:
        - equipment
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    model:
                      type: string
                    brand_en:
                      type: string
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /equipment/search:
    post:
      summary: Perform an advanced search for equipment.
      description: Extends basic search capabilities, allowing a search term to be used across different equipment fields. Additional filter criteria can be used to further narrow the search-term search.
      tags:
        - equipment
      parameters:
        - in: header
          name: Accept
          required: false
          description: If omitted, `application/json` is assumed.
          schema:
            type: string
            enum:
              - application/json
              - text/csv
      requestBody:
        description: >
          The search criteria to use for the search.
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchCriteria'
              - type: object
                properties:
                  search_term:
                    type: string
                    description: wildcard search value to be used for searching any/all of the `search_term_fields`
                  search_term_fields:
                    description: which equipment fields the search term is applied to
                    type: array
                    items:
                      type: string
                      enum: [model, brand_en, type_en]
                  search_filter:
                    type: string
                    enum: [brand, equipment_type]
                    description: >
                      the type of filtering criteria to further refine results.
                  search_filter_value:
                    oneOf:
                      - type: integer
                      - type: string
                    description: >
                      The value to be used in the search filter criteria depends on the
                      value used for the `search_filter`

                        | search_filter | value is a(n) | matching |
                        |---------------|------------|----------|
                        | brand | integer | brand_id of the equipment
                        | equipment_type | integer | equipment_type_id of the equipment 
                   
            examples:
              example1:
                description: >
                  Search for equipment having a `model` matching `SureSigns` (wildcard),
                  
                  
                  **and** further apply a filter to get results where equipment has **equipment type** (`equipment_type_id`) = `1`.
                  
                  
                  Order the results by `id` (equipment id). 
                  

                  Do not skip any results, but limit the output to `10` entries.
                value:
                  offset: 0
                  limit: 10
                  order_by:
                    - id
                  search_term: SureSigns
                  search_term_fields:
                    - model
                  category_id:
                    - 7
                  search_filter: equipment type
                  search_filter_value: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    description: The total number of matching equipment in the database.
                    type: integer
                  product_views:
                    type: array
                    items:
                      $ref: '#/components/schemas/EquipmentView'
            text/csv: {} 
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /equipment/search/download:
    post:
      summary: Download the results of an advanced search for equipment.
      description: Extends basic search capabilities, allowing a search term to be used across different equipment fields. Additional filter criteria can be used to further narrow the search-term search.
      tags:
        - equipment
      parameters:
        - in: header
          name: Accept
          required: false
          description: If omitted, `application/json` is assumed.
          schema:
            type: string
            enum:
              - application/json
              - text/csv
      requestBody:
        description: >
          The search criteria to use for the search.
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchCriteria'
              - type: object
                properties:
                  search_term:
                    type: string
                    description: wildcard search value to be used for searching any/all of the `search_term_fields`
                  search_term_fields:
                    description: which equipment fields the search term is applied to
                    type: array
                    items:
                      type: string
                      enum: [model, brand_en, type_en]
                  search_filter:
                    type: string
                    enum: [brand, equipment_type]
                    description: >
                      the type of filtering criteria to further refine results.
                  search_filter_value:
                    oneOf:
                      - type: integer
                      - type: string
                    description: >
                      The value to be used in the search filter criteria depends on the
                      value used for the `search_filter`

                        | search_filter | value is a(n) | matching |
                        |---------------|------------|----------|
                        | brand | integer | brand_id of the equipment
                        | equipment type | integer | equipment_type_id of the equipment 
                   
            examples:
              example1:
                description: >
                  Search for equipment having a `model` matching `SureSigns` (wildcard),
                  
                  
                  **and** further apply a filter to get results where equipment has **equipment type** (`equipment_type_id`) = `1`.
                  
                  
                  Order the results by `id` (equipment id). 
                  

                  Do not skip any results, but limit the output to `10` entries.
                value:
                  offset: 0
                  limit: 10
                  order_by:
                    - id
                  search_term: SureSigns
                  search_term_fields:
                    - model
                  category_id:
                    - 7
                  search_filter: equipment type
                  search_filter_value: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    description: The total number of matching equipment in the database.
                    type: integer
                  equipment_views:
                    type: array
                    items:
                      $ref: '#/components/schemas/EquipmentView'
                  headers:
                    type: array
                    items:
                      type: object
                      description: a single object whose properties can be used to create headers for CSV/table rendering.
            text/csv: {} 
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /families:
    summary: Represents a product family
    post:
      summary: creates a family
      tags:
        - families
      requestBody:
        description:  The family to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Family'
      responses:
        200:
          description: returns the family 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Family'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /families/${id}:
    summary: Represents a product family.
    parameters:
    - name: id
      in: path
      description: the family id
      required: true
      schema:
        type: integer
    get:
      summary: gets family by id
      tags:
        - families
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/FamilyView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    put:
      summary: updates a family
      tags:
        - families
      requestBody:
        description: >
          The family to be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Family'
      responses:
        200:
          description: returns the family 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Family'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /families/search:
    post:
      summary: Perform an advanced search for families.
      description: Extends basic search capabilities, allowing a search term to be used across different family fields. Additional filter criteria can be used to further narrow the search-term search.
      tags:
        - families
      parameters:
        - in: header
          name: Accept
          required: false
          description: If omitted, `application/json` is assumed.
          schema:
            type: string
            enum:
              - application/json
              - text/csv
      requestBody:
        description: >
          The search criteria to use for the search.
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchCriteria'
              - type: object
                properties:
                  search_term:
                    type: string
                    description: wildcard search value to be used for searching any/all of the `search_term_fields`
                  search_term_fields:
                    description: which family fields the search term is applied to
                    type: array
                    items:
                      type: string
                      enum: [family_code, oem_brand_en, name_en, category_en]
                  search_filter:
                    type: string
                    enum: [oem_brand, product_type]
                    description: >
                      the type of filtering criteria to further refine results.
                  search_filter_value:
                    oneOf:
                      - type: integer
                      - type: string
                    description: >
                      The value to be used in the search filter criteria depends on the
                      value used for the `search_filter`

                        | search_filter | value is a(n) | matching |
                        |---------------|------------|----------|
                        | oem_brand | integer | oem_brand_id of any matching product linked to the family
                        | product_type | integer | product_type_id of any matching product linked to the family
                        
                  category_id:
                    type: array
                    items:
                      type: integer
                    description: >
                      The categories to add to the family search filtering. 
                      Specifying more than one category widens the search results. 
                      Note: The filtering actually looks for **the category on products linked to the family.**
                   
            examples:
              example1:
                description: >
                  Search for families having a `family_code` or `name_en` matching `F` (wildcard),

                  
                  **and** that are linked with products belonging to `category_id` = `5`, `6`, `7`, or `8`. 
                  
                  
                  **and** further apply a filter to get results where familes have any products associated with **product type** (`product_type_id`) = `2`.
                  
                  
                  Order the results by `id` (family id). 
                  

                  Do not skip any results, but limit the output to `10` entries.
                value:
                  offset: 0
                  limit: 10
                  order_by:
                    - id
                  search_term: F
                  search_term_fields:
                    - family_code
                    - name_en
                  category_id:
                    - 4
                    - 5
                    - 6
                    - 7
                  search_filter: product type
                  search_filter_value: 2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    description: The total number of matching families in the database.
                    type: integer
                  product_views:
                    type: array
                    items:
                      $ref: '#/components/schemas/FamilyView'
            text/csv: {} 
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /families/search/download:
    post:
      summary: Download advanced search results for families.
      description: Extends basic search capabilities, allowing a search term to be used across different family fields. Additional filter criteria can be used to further narrow the search-term search.
      tags:
        - families
      requestBody:
        description: >
          The search criteria to use for the search.
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchCriteria'
              - type: object
                properties:
                  search_term:
                    type: string
                    description: wildcard search value to be used for searching any/all of the `search_term_fields`
                  search_term_fields:
                    description: which family fields the search term is applied to
                    type: array
                    items:
                      type: string
                      enum: [family_code, oem_brand_en, name_en, category_en]
                  search_filter:
                    type: string
                    enum: [oem_brand, product_type]
                    description: >
                      the type of filtering criteria to further refine results.
                  search_filter_value:
                    oneOf:
                      - type: integer
                      - type: string
                    description: >
                      The value to be used in the search filter criteria depends on the
                      value used for the `search_filter`

                        | search_filter | value is a(n) | matching |
                        |---------------|------------|----------|
                        | oem_brand | integer | oem_brand_id of any matching product linked to the family
                        | product_type | integer | product_type_id of any matching product linked to the family
                        
                  category_id:
                    type: array
                    items:
                      type: integer
                    description: >
                      The categories to add to the family search filtering. 
                      Specifying more than one category widens the search results. 
                      Note: The filtering actually looks for **the category on products linked to the family.**
                   
            examples:
              example1:
                description: >
                  Search for families having a `family_code` or `name_en` matching `F` (wildcard),

                  
                  **and** that are linked with products belonging to `category_id` = `5`, `6`, `7`, or `8`. 
                  
                  
                  **and** further apply a filter to get results where familes have any products associated with **product type** (`product_type_id`) = `2`.
                  
                  
                  Order the results by `id` (family id). 
                  

                  Do not skip any results, but limit the output to `10` entries.
                value:
                  offset: 0
                  limit: 10
                  order_by:
                    - id
                  search_term: F
                  search_term_fields:
                    - family_code
                    - name_en
                  category_id:
                    - 4
                    - 5
                    - 6
                    - 7
                  search_filter: product type
                  search_filter_value: 2
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    description: The total number of matching families in the database.
                    type: integer
                  family_views:
                    type: array
                    items:
                      $ref: '#/components/schemas/FamilyView'
                  headers:
                    type: array
                    items:
                      type: object
                      description: a single object whose properties can be used to create headers for CSV/table rendering.
            text/csv: {} 
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /groups:
    summary: Represents a product group
    post:
      summary: creates a group
      tags:
        - groups
      requestBody:
        description:  The group to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        200:
          description: returns the group 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Group'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /groups/${id}:
    summary: Represents a product group.
    parameters:
    - name: id
      in: path
      description: the group id
      required: true
      schema:
        type: integer
    get:
      summary: gets group by id
      tags:
        - groups
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Group'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    put:
      summary: updates a group
      tags:
        - groups
      requestBody:
        description: >
          The group to be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        200:
          description: returns the group 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Group'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /groups/${id}/equipment:
    parameters:
    - name: id
      in: path
      description: the group id
      required: true
      schema:
        type: integer
    get:
      summary: Get all the equipment for the given group id.
      tags:
        - groups
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  equipment_group_views:
                    type: array
                    items:
                    $ref: '#/components/schemas/EquipmentGroupView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: saves equipment-group information for a given group
      tags:
        - groups
      requestBody:
        description: The equipment/group associations for the group. Note, providing the group id on each array element is not necessary.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EquipmentGroup'
      responses:
        200:
          description: returns the saved equipment groups 
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/EquipmentGroup'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /groups/search:
    post:
      summary: Perform an advanced search for groups.
      description: Extends basic search capabilities, allowing a search term to be used across many different group fields. Additional filter criteria can be used to further narrow the search-term search.
      tags:
        - groups
      requestBody:
        description: >
          The search criteria to use for the search.
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchCriteria'
              - type: object
                properties:
                  search_term:
                    type: string
                    description: wildcard search value to be used for searching any/all of the `search_term_fields`
                  search_term_fields:
                    description: which group fields the search term is applied to
                    type: array
                    items:
                      type: string
                      enum: [group_code]
                  
            examples:
              example1:
                description: >
                  Search for group having a `group_code` matching `028` (wildcard),
                  
                  
                  Order the results by `id` (group id). 
                  

                  Do not skip any results, but limit the output to `10` entries.
                value:
                  offset: 0
                  limit: 10
                  order_by:
                    - id
                  search_term: 028
                  search_term_fields:
                    - group_code
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    description: The total number of matching groups in the database.
                    type: integer
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /groups/search/download:
    post:
      summary: Download results from an advanced search for groups.
      description: Extends basic search capabilities, allowing a search term to be used across many different group fields. Additional filter criteria can be used to further narrow the search-term search.
      tags:
        - groups
      requestBody:
        description: >
          The search criteria to use for the search.
        required: true
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/SearchCriteria'
              - type: object
                properties:
                  search_term:
                    type: string
                    description: wildcard search value to be used for searching any/all of the `search_term_fields`
                  search_term_fields:
                    description: which group fields the search term is applied to
                    type: array
                    items:
                      type: string
                      enum: [group_code]
                  
            examples:
              example1:
                description: >
                  Search for group having a `group_code` matching `028` (wildcard),
                  
                  
                  Order the results by `id` (group id). 
                  

                  Do not skip any results, but limit the output to `10` entries.
                value:
                  offset: 0
                  limit: 10
                  order_by:
                    - id
                  search_term: 028
                  search_term_fields:
                    - group_code
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    description: The total number of matching groups in the database.
                    type: integer
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
                  headers:
                    type: array
                    items:
                      type: object
                      description: a single object whose properties can be used to create headers for CSV/table rendering.
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
components:
  schemas:
    ApiError:
      type: object
      properties:
        message:
          type: string
          description: A human-readable message describing the error.
        error:
          type: string
          description: The error details. Typically error details may contain sensitive information not intended to be shown directly in the user interface.
    Auditable:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        version:
          type: integer
          readOnly: true
    Brand:
      type: object
      description: An original equipment manufacturer (OEM) or brand.
      allOf:
        - type: object
          properties:
            id:
              type: integer
              readOnly: true
            name_en:
              type: string
              maxLength: 255
            name_zh:
              type: string
              maxLength: 255
            parent_id:
              type: integer
            is_oem:
              type: boolean
        - $ref: '#/components/schemas/Auditable'
    Category:
      type: object
      description: Common grouping used to categorize families. Categories define certain defaults and constraints across families.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          name_en:
            description: English name.
            type: string
            maxLength: 255
          name_zh:
            description: Chinese name.
            type: string
            maxLength: 255
          parent_id:
            description: ID of containing parent category
            type: integer
          product_name_formula_id:
            description: Identifies a stored **Formula** that can be used to auto-generate product names (title)
            type: string
            maxLength: 255
          product_description_formula_id:
            description: Identifies a stored **Formula** that can be used to auto-generate product descriptions.
            type: string
            maxLength: 255
          family_name_formula_id:
            description: Identifies a stored **Formula** that can be used to auto-generate family names (title).
            type: string
            maxLength: 255
          valid_image_types:
            type: string
            maxLength: 255
          featured:
            description: Identifies whether the category should be featured in the Catalog.
            type: boolean
          image_url:
            description: Specifies a category image to graphically depict the category in the Catalog.
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    CategoryView:
      type: object
      description: Extended view of the Category. It pulls in the naming-formulas associated with the category.
      allOf:
      - type: object
        properties:
          
          product_name_formula:
            description: javascript formula for generating product names
            type: string
            maxLength: 4000
          product_description_formula:
            description: javascript formula for generating product descriptions
            type: string
            maxLength: 4000
          family_name_formula:
            description: javascript formula for generating family names (title).
            type: string
            maxLength: 4000
      - $ref: '#/components/schemas/Category'
      - $ref: '#/components/schemas/Auditable'
    Certificate:
      type: object
      description: Describes certifications that products may be associated with.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          name_en:
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    CustomAttribute:
      type: object
      description: A custom attribute that can be assigned to a product
      allOf:
        - type: object
          properties:
            id:
              type: integer
              readOnly: true
            name_en:
              type: string
              maxLength: 255
            name_zh:
              type: string
              maxLength: 255
            category_id:
              type: integer
        - $ref: '#/components/schemas/Auditable'
    DeleteConfirmation:
      type: object
      description: The payload of an entity deletion confirmation.
      allOf:
        - type: object
          properties:
            _affectedRows:
              type: integer
              readOnly: true     
    Equipment:
      type: object
      description: An equipment model. Equipment represents items that a Product may be compatible with (e.g. can connect to).
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          brand_id:
            description: References the brand.
            type: integer
          equipment_type_id:
            description: References the equipment type.
            type: integer
          model:
            description: Model number/identifier.
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    EquipmentView:
      type: object
      description: The view of an equipment item that includes equipment type and brand information..
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          model:
            description: Model number/identifier.
            type: string
            maxLength: 255
          equipment_type_id:
            description: References the equipment type.
            type: integer
          type_en:
            description: English equipment type name.
            type: string
            maxLength: 255
          type_zh:
            description: Chinese equipment type name.
            type: string
            maxLength: 255
          brand_id:
            description: References the brand.
            type: integer
          brand_en:
            description: English brand name.
            type: string
            maxLength: 255
          brand_zh:
            description: Chinese brand name.
            type: string
            maxLength: 255
          is_oem:
            description: Whether the referenced brand is an oem.
            type: boolean
      - $ref: '#/components/schemas/Auditable'
    EquipmentAvailableRegion:
      type: object
      description: A geographic region where an equipment item is available.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          equipment_id:
            description: References the equipment item.
            type: integer
          available_region_id:
            description: References the available region.
            type: integer
      - $ref: '#/components/schemas/Auditable'
    EquipmentAvailableRegionView:
      type: object
      description: A geographic region where an equipment item is available, including extended information.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          equipment_id:
            description: References the equipment item.
            type: integer
          equipment_model:: 
            type: string
          available_region_id:
            description: References the available region.
            type: integer
          available_region_name_en:
            type: string
      - $ref: '#/components/schemas/Auditable'
    EquipmentGroup:
      type: object
      description: Equipment that is associated with a group.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
            description: id for the association
          equipment_id:
            description: References the equipment item.
            type: integer
          group_id:
            description: References the group item.
            type: integer
      - $ref: '#/components/schemas/Auditable'
    EquipmentGroupView:
      type: object
      description: Equipment that is associated with a group (includes extended related properties)
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
            description: id for the association
          equipment_id:
            description: References the equipment item.
            type: integer
          group_id:
            description: References the group item.
            type: integer
          model:
            type: string
            description: the equipment model
          brand_id:
            description: References the brand associated with the equipment item.
            type: integer
          brand_en:
            type: string
            description: brand name (English)
          brand_zh:
            type: string
            description: brand name (Chinese)
          is_oem:
            type: boolean
            description: whether the associated brand is an OEM
      - $ref: '#/components/schemas/Auditable'
    EquipmentImage:
      type: object
      description: An equipment-specific image.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          equipment_id:
            description: References the equipment item.
            type: integer
          image_link:
            description: The image URL.
            type: string
      - $ref: '#/components/schemas/Auditable'
    Family:
      type: object
      description: The product family .
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          name_en:
            description: Name (English) of the family.
            type: string
            maxLength: 255
          family_code:
            type: string
            maxLength: 255
          family_connector_code:
            type: string
            maxLength: 255
          group_id:
            description: References the group.
            type: integer
          name_edit_user_id:
            description: user id who last edited the name
            type: integer
          name_edit_timestamp:
            description: timestamp of last name edit
            type: string
            format: date-time
          image_link_connector_distal:
            description: URL to a connector distal image.
            type: string
            maxLength: 255
          video_link:
            description: URL to a video for the family.
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    FamilyView:
      type: object
      description: The view of a family including extended information.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          name_en:
            description: Name (English) of the family.
            type: string
            maxLength: 255
          family_code:
            type: string
            maxLength: 255
          family_connector_code:
            type: string
            maxLength: 255
          group_id:
            description: References the group.
            type: integer
          group_code:
            type: string
            maxLength: 255
          image_link_connector_distal:
            description: URL to a connector distal image.
            type: string
            maxLength: 255
          video_link:
            description: URL to a video for the family.
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    Group:
      type: object
      description: The group used to group together families.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          group_code:
            description: Code for the group
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    Login:
      type: object
      description: A login payload. 
      allOf:
        - type: object
          properties:
            username:
              type: string
              maxLength: 255
            password:
              type: string
              maxLength: 255
    LoginResult:
      type: object
      description: The login result.
      allOf:
        - type: object
          properties:
            apikey:
              description: Key to be used for client API access. Should be stored in a secure cookie for use by client-side apps.
              type: string
              maxLength: 255  
            expires:
              description: The expiration timestamp (GMT) of the apikey, in ISO-860 datetime format.
              type: string
              maxLength: 255
            account_id: 
              description: Identifies the account associated with the principal. Should be stored in a secure cookie for by client-side apps for API access.
              type: integer
            principal:
              type: object
              properties:
                id:
                  description: Identifies the user.
                  type: integer
                username:
                  type: string
                  maxLength: 255
                email:
                  type: string
                  maxLength: 255
                first_name:
                  type: string
                  maxLength: 255
                last_name:
                  type: string
                  maxLength: 255
                mobile_phone:
                  type: string
                  maxLength: 255
                must_reset_password:
                  type: integer
                login_count:
                  type: integer
                default_account_id:
                  type: integer
                type:
                  type: string
                  maxLength: 255
                roles:
                  type: array
                  items:
                    type: string
                    enum:
                      - regular
                      - admin
    MarketingRegion:
      type: object
      allOf:
        - type: object
          properties:
            name_en:
              type: string
            id:
              type: integer
              readOnly: true
        - $ref: '#/components/schemas/Auditable'
    Product:
      type: object
      allOf:
        - type: object
          properties:
            category_id:
              type: integer
            description_en:
              type: string
              maxLength: 500
            description_zh:
              type: string
              maxLength: 500
            family_id:
              type: integer
            id:
              type: integer
              readOnly: true
            lifecycle_id:
              type: integer
            name_en:
              type: string
              maxLength: 255
            name_en_edit_user_id:
              type: integer
            name_en_edit_timestamp:
              type: string
              format: date-time
            name_zh:
              type: string
              maxLength: 255
            name_zh_edit_user_id:
              type: integer
            name_zh_edit_timestamp:
              type: string
              format: date-time
            note_internal:
              type: string
            note_client:
              type: string
            oem:
              type: string
              maxLength: 255
            oem_brand_id:
              type: integer
            packaging_factor_id:
              type: integer
            price_eu:
              type: number
              format: double
            price_us:
              type: number
              format: double
            price_zh:
              type: number
              format: double
            product_type_id:
              type: integer
            sku:
              type: string
              maxLength: 255
            supplier_id:
              type: integer
            tags:
              type: string
            video_link:
              type: string
            warranty_duration_months:
              type: integer
            weight_kg:
              type: number
              format: double
            weight_lbs:
              type: number
              format: double
            
        - $ref: '#/components/schemas/Auditable'
    ProductView:
      type: object
      description: An extended view of a medical product, including commonly used fields from family, category, brand and other related data.
      allOf:
        - type: object
          properties:
            category_id:
              type: integer
            category_en:
              type: string
              maxLength: 255
            category_zh:
              type: string
              maxLength: 255
            id:
              type: integer
            description_en:
              type: string
              maxLength: 500
            description_zh:
              type: string
              maxLength: 500
            family_code:
              type: string
              maxLength: 255
            family_connector_code:
              type: string
              maxLength: 255
            family_id:
              type: integer
            family_name_en:
              type: string
              maxLength: 255
            family_video_link:
              type: string
              maxLength: 255
            lifecycle_id:
              type: integer
            lifecyle_en:
              type: string
              maxLength: 255
            lifecyle_zh:
              type: string
              maxLength: 255
            name_en:
              type: string
              maxLength: 255
            name_zh:
              type: string
              maxLength: 255
            note_internal:
              type: string
            note_client:
              type: string
            oem:
              type: string
              maxLength: 255
            oem_brand_id:
              type: integer
            oem_brand_en:
              type: string
              maxLength: 255
            oem_brand_zh:
              type: string
              maxLength: 255
            is_oem:
              type: boolean
            packaging_factor:
              type: string
              maxLength: 100
            packaging_factor_id:
              type: integer
            price_us:
              type: number
              format: double
            price_zh:
              type: number
              format: double
            price_eu:
              type: number
              format: double
            product_name_formula:
              type: string
            product_description_formula:
              type: string
            product_type_id:
              type: integer
            product_type_en:
              type: string
              maxLength: 255
            product_type_zh:
              type: string
              maxLength: 255
            sku:
              type: string
              maxLength: 255
            tags:
              type: string
            video_link:
              type: string
            warranty_duration_months:
              type: integer
            weight_kg:
              type: number
              format: double
            weight_lbs:
              type: number
              format: double
        - $ref: '#/components/schemas/Auditable'
    ProductCertificate:
      type: object
      description: An association between a product and a certificate.
      allOf:
        - type: object
          properties:
            id:
              type: integer
              readOnly: true
            product_id:
              type: integer
            certificate_id:
              description: reference to a Certificate object
              type: integer
    ProductCustomAttribute:
      type: object
      description: Custom attribute value for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          custom_attribute_id:
            type: integer
          value_en:
            type: string
            maxLength: 255
          value_zh:
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'    
    ProductCustomAttributeView:
      type: object
      description: Custom attribute value for a product, including extend information.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          product_id:
            type: integer
          custom_attribute_id:
            type: integer
          custom_attribute_en:
            description: the name of the attribute (English)
            type: string
            maxLength: 255
          custom_attribute_zh:
            description: the name of the attribute (Chinese)
            type: string
            maxLength: 255
          value_en:
            type: string
            maxLength: 255
          value_zh:
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    ProductEquipment:
      type: object
      description: The equipment reference for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          equipment_id:
            type: integer
      - $ref: '#/components/schemas/Auditable'    
    ProductEquipmentView:
      type: object
      description: Equipment reference for a product, including extend information.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          product_id:
            type: integer
          equipment_id:
            type: integer
          model:
            description: The model number for the equipment.
            type: string
            maxLength: 255
          brand_en:
            description: The equipment brand name (Chinese)
            type: string
            maxLength: 255
          brand_zh:
            description: The equipment brand name (Chinese)
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    ProductFamily:
      type: object
      description: The family reference for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          family_id:
            type: integer
      - $ref: '#/components/schemas/Auditable'    
    ProductFilterOption:
      type: object
      description: The filter option reference for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          filter_option_id:
            type: integer
          priority_order:
            description: the display order/priority of the option
            type: integer
      - $ref: '#/components/schemas/Auditable'
    ProductFilterOptionView:
      type: object
      description: The filter option reference for a product, including extended properties.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          filter_id:
            description: reference to the filter associated with the filter option
            type: integer
          filter_en:
            description: The name of the filter (English)
            type: string
          filter_zh:
            description: The name of the filter (Chinese)
            type: string
          filter_option_id:
            type: integer
          option_en:
            description: The name of the option (English)
            type: string
          option_zh:
            description: The name of the option (Chinese)
            type: string
          option_us:
            description: The name of the option (US English). Typically only used if imperial units are needed for an option.
            type: string
          priority_order:
            description: the display order/priority of the option
            type: integer
      - $ref: '#/components/schemas/Auditable'
    ProductImage:
      type: object
      description: The image reference for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          image_type_id:
            type: integer
          image_link:
            type: string
            maxLength: 255
          priority_order:
            type: integer
      - $ref: '#/components/schemas/Auditable'
    ProductImageView:
      type: object
      description: The image reference for a product, including extended properties.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          image_type_id:
            type: integer
          image_type:
            description: name of the image type
            type: string
          priority_order:
            type: integer
          image_link:
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable' 
    ProductMarketingRegion:
      type: object
      description: The marketing region reference for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          marketing_region_id:
            type: integer
      - $ref: '#/components/schemas/Auditable'
    ProductMarketingRegionView:
      type: object
      description: The marketing region reference for a product, including extended properties.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          product_name_en:
            type: string
          product_name_zh:
            type: string
          marketing_region_id:
            type: integer
          marketing_region_name_en:
            type: string
      - $ref: '#/components/schemas/Auditable'
    ProductOemReference:
      type: object
      description: The OEM reference for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          brand_id:
            type: integer
          name:
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    ProductOemReferenceView:
      type: object
      description: An extended view of the OEM reference for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          brand_id:
            type: integer
          name:
            type: string
            maxLength: 255
          is_oem:
            type: boolean
          brand_en:
            type: string
          brand_zh:
            type: string
      - $ref: '#/components/schemas/Auditable'
    ProductSet:
      type: object
      description: The Set reference for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          parent_product_id:
            type: integer
          child_product_id:
            type: integer
          quantity:
            type: string
            description: the quantity (count) of the child product for the set
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    ProductSetView:
      type: object
      description: The Set reference for a product, including extended properties
      allOf:
      - type: object
        properties:
          id:
            type: integer
          parent_product_id:
            type: integer
          parent_sku:
            type: string
          child_product_id:
            type: integer
          child_sku:
            type: string
          quantity:
            type: string
            description: the quantity (count) of the child product for the set
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    ProductSupplier:
      type: object
      description: The Supplier reference for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          supplier_id:
            type: integer
          supplier_price:
            type: number
            description: the supplier price for the product
      - $ref: '#/components/schemas/Auditable'
    SearchCriteria:
      type: object
      allOf:
      - type: object
        properties:
          offset:
            type: integer
            description: for pagination. A zero-indexed value indicating where to begin the output with in the set of all possible search results.
          limit:
            type: integer
            description: for pagination. The number of records to return in a single query (up to 1000).
          order_by:
            type: array
            description: Describes the ordering of the search results. Provide the field names to order by. Prefix the field name with a `-` if you want ordering to be in descending order.
            items:
              type: string
          search_term:
            type: string
            description: the search term value. It will be treated as a wildcard search within the `search_term_fields` values.
          search_term_fields:
            type: array
            description: the list of fields you want the `search_term` to apply to. The criteria will be applied as a (OR) when conducting the search across more than one field.
            items:
              type: string        
    SimpleMessage:
      type: object
      description: A message from the server. 
      allOf:
        - type: object
          properties:
            message:
              type: string
              maxLength: 255
    Supplier:
      type: object
      allOf:
        - type: object
          properties:
            name_en:
              type: string
            name_zh:
              type: string
            id:
              type: integer
              readOnly: true
        - $ref: '#/components/schemas/Auditable'
  responses:
    400ClientError:
      description: client error
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/ApiError'
    410ClientError:
      description: client error issued when an id was provided for deletion, but the entity no longer exists
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/ApiError'
    500ServerError:
      description: server error
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/ApiError'