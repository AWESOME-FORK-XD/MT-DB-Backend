openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Medten Product API'
  description: 'Interact with the Medten product database using this API.'
servers:
  - url: https://mgtwitxxi1.execute-api.ap-southeast-1.amazonaws.com/Prod/api/v1/
    description: API Test Environment
  - url: https://v73kddyeqk.execute-api.ap-southeast-1.amazonaws.com/Prod/api/v1/
    description: API POC (Proof of Concept) Environment
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/gaumeister/medten-product-api/1.0.0
paths: 
  /auth/login:
    post:
      summary: Logs in, obtaining api key and principal information.
      tags: 
        - authentication
      requestBody:
        description: The username and password login credentials are required.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/LoginResult'
        400:
          $ref: '#/components/responses/400ClientError'
        401:
          description: Unauthorized. Invalid credentials.
        500:
          $ref: '#/components/responses/500ServerError'
  /auth/logout:
    post:
      summary: Logs out, removing the allocated apikey.
      tags: 
        - authentication
      requestBody:
        description: The username to logout. (The password portion of the payload should be omitted).
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SimpleMessage'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /auth/password/forgot:
    post:
      summary: Handle a request to reset the users' password.
      tags: 
        - authentication
      requestBody:
        description: The email of the user requesting a password reset.
        required: true
        content:
          application/json:
            schema:
              type: object
              allOf:
                - type: object
                  properties:
                    email:
                      type: string
                      maxLength: 255
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SimpleMessage'
        500:
          $ref: '#/components/responses/500ServerError'
  /auth/password/reset:
    post:
      summary: Resets the password for a user.
      tags: 
        - authentication
      requestBody:
        description: The replacement password and password-reset-token.
        required: true
        content:
          application/json:
            schema:
              type: object
              allOf:
                - type: object
                  properties:
                    token:
                      description: the temporary token received at the reset password URL for the user
                      type: string
                      maxLength: 255
                    password:
                      description: the new password for the user
                      type: string
                      maxLength: 255
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/SimpleMessage'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products:
    post:
      summary: creates a new product
      tags:
        - products
      requestBody:
        description: >
          The product to be created. Note the `id` property should be excluded. It will be returned in the response.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Product'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'   
  /products/skus:
    summary: Gets the distinct skus currently in the database.
    description: Gets the distinct skus currently in the database. SKU should be a unique value.
    get:
      summary: list of unique SKUs
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                type: array
                items:  
                  type: string
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}:
    summary: Represents a product
    description: A medical product.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets a product by id
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    put:
      summary: updates a product
      tags:
        - products
      requestBody:
        description: >
          The product to be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        200:
          description: returns the product, including extended information
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/ProductView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/certificates:
    summary: The certificates a product is qualified for.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all certificates for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_certificates:
                    type: array
                    items:  
                      $ref: '#/components/schemas/Certificate'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
    post:
      summary: saves the current set of certificates for a product, adding those that need to be added, updating any existing, and removing any that no longer match the payload.
      tags:
        - products
      requestBody:
        description: >
          The product to be updated.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:  
                $ref: '#/components/schemas/ProductCertificate'
                  
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/ProductCertificate'
              
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  /products/${id}/custom_attributes:
    summary: The custom attributes of a product.
    parameters:
    - name: id
      in: path
      description: the product id
      required: true
      schema:
        type: integer
    get:
      summary: gets all custom attributes for a product
      tags:
        - products
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  product_custom_attribute_view:
                    type: array
                    items:  
                      $ref: '#/components/schemas/ProductCustomAttributeView'
        400:
          $ref: '#/components/responses/400ClientError'
        500:
          $ref: '#/components/responses/500ServerError'
  # /families:
  # /equipment:
  # /groups:
  # /:
  # /dataload:

components:
  schemas:
    ApiError:
      type: object
      properties:
        message:
          type: string
          description: A human-readable message describing the error.
        error:
          type: string
          description: The error details. Typically error details may contain sensitive information not intended to be shown directly in the user interface.
    Auditable:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        version:
          type: integer
          readOnly: true
    Brand:
      type: object
      description: An original equipment manufacturer (OEM) or brand.
      allOf:
        - type: object
          properties:
            id:
              type: integer
              readOnly: true
            name_en:
              type: string
              maxLength: 255
            name_zh:
              type: string
              maxLength: 255
            parent_id:
              type: integer
        - $ref: '#/components/schemas/Auditable'
    Category:
      type: object
      description: Common grouping used to categorize families. Categories define certain defaults and constraints across families.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          name_en:
            description: English name.
            type: string
            maxLength: 255
          name_zh:
            description: Chinese name.
            type: string
            maxLength: 255
          product_name_formula_id:
            description: Identifies a stored **Formula** that can be used to auto-generate product names.
            type: string
            maxLength: 255
          product_description_formula_id:
            description: Identifies a stored **Formula** that can be used to auto-generate product descriptions.
            type: string
            maxLength: 255
          valid_image_types:
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    Certificate:
      type: object
      description: Describes certifications that products may be associated with.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          name_en:
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    ForgotPassword:
      type: object
      description: A forgot-password request payload. 
      allOf:
        - type: object
          properties:
            email:
              type: string
              maxLength: 255
    Login:
      type: object
      description: A login payload. 
      allOf:
        - type: object
          properties:
            username:
              type: string
              maxLength: 255
            password:
              type: string
              maxLength: 255
    LoginResult:
      type: object
      description: The login result.
      allOf:
        - type: object
          properties:
            apikey:
              description: Key to be used for client API access. Should be stored in a secure cookie for use by client-side apps.
              type: string
              maxLength: 255  
            expires:
              description: The expiration timestamp (GMT) of the apikey, in ISO-860 datetime format.
              type: string
              maxLength: 255
            account_id: 
              description: Identifies the account associated with the principal. Should be stored in a secure cookie for by client-side apps for API access.
              type: integer
            principal:
              type: object
              properties:
                id:
                  description: Identifies the user.
                  type: integer
                username:
                  type: string
                  maxLength: 255
                email:
                  type: string
                  maxLength: 255
                first_name:
                  type: string
                  maxLength: 255
                last_name:
                  type: string
                  maxLength: 255
                mobile_phone:
                  type: string
                  maxLength: 255
                must_reset_password:
                  type: integer
                login_count:
                  type: integer
                default_account_id:
                  type: integer
                type:
                  type: string
                  maxLength: 255
    Product:
      type: object
      description: A medical product.
      allOf:
        - type: object
          properties:
            id:
              type: integer
              readOnly: true
            sku:
              type: string
              maxLength: 255
            product_type_id:
              type: integer
            oem:
              type: string
              maxLength: 255
            oem_brand_id:
              type: integer
            family_id:
              type: integer
            category_id:
              type: integer
            name_en:
              type: string
              maxLength: 255
            description_en:
              type: string
              maxLength: 500
            name_zh:
              type: string
              maxLength: 255
            description_zh:
              type: string
              maxLength: 500
            packaging_factor_id:
              type: integer
            price:
              type: number
              format: double
            supplier_id:
              type: integer
            weight:
              type: number
              format: double
            warranty_duration_months:
              type: integer
            tags:
              type: string
            lifecycle_id:
              type: integer
        - $ref: '#/components/schemas/Auditable'
    ProductView:
      type: object
      description: An extended view of a medical product, including commonly used fields from family, category, brand and other related data.
      allOf:
        - type: object
          properties:
            id:
              type: integer
            sku:
              type: string
              maxLength: 255
            oem:
              type: string
              maxLength: 255
            name_en:
              type: string
              maxLength: 255
            description_en:
              type: string
              maxLength: 500
            name_zh:
              type: string
              maxLength: 255
            description_zh:
              type: string
              maxLength: 500
            product_type_id:
              type: integer
            product_type_en:
              type: string
              maxLength: 255
            product_type_zh:
              type: string
              maxLength: 255
            
            family_id:
              type: integer
            family_code:
              type: string
              maxLength: 255
            family_connector_code:
              type: string
              maxLength: 255
              
            oem_brand_id:
              type: integer
            oem_brand_en:
              type: string
              maxLength: 255
            oem_brand_zh:
              type: string
              maxLength: 255
              
            category_id:
              type: integer
            category_en:
              type: string
              maxLength: 255
            category_zh:
              type: string
              maxLength: 255
            valid_image_types:
              type: string
              maxLength: 255
            product_name_formula:
              type: string
            product_description_formula:
              type: string
            packaging_factor:
              type: string
              maxLength: 100
            packaging_factor_id:
              type: integer
            price:
              type: number
              format: double
            supplier_id:
              type: integer
            supplier_en:
              type: string
              maxLength: 255
            supplier_zh:
              type: string
              maxLength: 255
            weight:
              type: number
              format: double
            warranty_duration_months:
              type: integer
            tags:
              type: string
            lifecycle_id:
              type: integer
            lifecyle_en:
              type: string
              maxLength: 255
            lifecyle_zh:
              type: string
              maxLength: 255
            created:
              type: string
              format: date-time
            updated:
              type: string
              format: date-time
            version:
              type: integer
        - $ref: '#/components/schemas/Auditable'
    ProductCertificate:
      type: object
      description: An association between a product and a certificate.
      allOf:
        - type: object
          properties:
            id:
              type: integer
              readOnly: true
            product_id:
              type: integer
            certificate_id:
              description: reference to a Certificate object
              type: integer
    ProductCustomAttribute:
      type: object
      description: Custom attribute value for a product.
      allOf:
      - type: object
        properties:
          id:
            type: integer
          product_id:
            type: integer
          custom_attribute_id:
            type: integer
          value_en:
            type: string
            maxLength: 255
          value_zh:
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'    
    ProductCustomAttributeView:
      type: object
      description: Custom attribute value for a product, including extend information.
      allOf:
      - type: object
        properties:
          id:
            type: integer
            readOnly: true
          product_id:
            type: integer
          custom_attribute_id:
            type: integer
          custom_attribute_en:
            type: string
            maxLength: 255
          custom_attribute_zh:
            type: string
            maxLength: 255
          value_en:
            type: string
            maxLength: 255
          value_zh:
            type: string
            maxLength: 255
      - $ref: '#/components/schemas/Auditable'
    
    
    SimpleMessage:
      type: object
      description: A message from the server. 
      allOf:
        - type: object
          properties:
            message:
              type: string
              maxLength: 255
    
  responses:
    400ClientError:
      description: client error
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/ApiError'
    500ServerError:
      description: server error
      content:
        application/json:
          schema: 
            $ref: '#/components/schemas/ApiError'